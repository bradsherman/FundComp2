Brad Sherman
Brent Marin
Charlie Osborne

Group Meeting Time Log

Date: 02/16/2016
Time: 8:30p-10:00p
Topic: Discuss what the project will be and write first deliverable

Date: 02/29/2016
Time: 8:00p-9:30p
Topic: Discuss intial guidelines and get an outline of what we want for our project

Date: 2/29/2016
Time: 4:00-4:50p
Topic: Worked in lab on learnig about Bloomberg API and how to use it, i.e. reading
		documentation

Date: 3/14/2016
Time: 4:00-4:50p
Topic: Worked in lab on downloading Bloomberg API, and trying to start a session

Date: 3/18/2016
Time: 10:20-11:20a
Topic: We talked about the feasability of doing this project, and whether or not we
		should switch. We decided to switch our project to a simple Python interpreter.

Date: 3/19/2016
Time: 2:00-3:00p
Topic: Read the article about writing an interpreter.
		URL = https://ruslanspivak.com/lsbasi-part1/

Date: 3/20/2016
Time: 10:00p-12:00a
Topic: Wrote a simple code to interpret math, specifically multiplication

Date: 4/6/2016
Time: 4:00-6:00p
Topic: Found a free API and decided to use some sort of library to request data
		a website to and subsequently parse the stock quote data, and then use
		a Stock class, a Portfolio class with composition to allow the user to mix
		and match stocks. We will have a ranking algorithm based on the data we get 
		so that we can give a forecast on the user's selection of stocks

Date: 4/13/2016
Time: 10:15a-12:15p
Topic: After successfully being able to retrieve simple stock data, we started searching
		for a json parsing library, and we set up a group repository for all of our code.

Date: 4/17/2016
Time: 9:00p-12:00a
Topic: Having trouble compiling the json parsing library with c++11, we decided to parse
		the results so this time was spent doing that.

Date: 4/18/2016
Time: 10:20-12:20
Topic: Wrote get functions for the Stock class, started looking for a stock ranking 
		algorithm, found a list of NASDAQ stock ticker names that we can use to create
		many stock objects to rank, started writing the main program that will read in 
		all the stock ticker names, and create a stock object for each ticker

Time for each Member:
17.5 hours
